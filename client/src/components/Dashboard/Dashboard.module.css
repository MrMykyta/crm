.wrap{
  position: relative;
  flex: 1 1 auto;
  width: 100%;
  min-height: calc(100dvh - 72px); /* 64px топбар + небольшой зазор учтён в 72 */
  padding: 0 16px 20px;            /* внутренние поля по вкусу */
  box-sizing: border-box;
}

/* контейнеру даём высоту — чтобы было куда тянуть вниз */
.grid{
  position: relative;
  min-height: 100%;
}

/* карточка */
.card{
  height: calc(100% - 12px * 2); /* высота карточки с учетом отступов */
  position: relative;
  background: var(--card-bg);
  border: 1px solid var(--card-brd);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow);
  padding: 12px;
  color: var(--text);
  overflow: clip;
}

/* заголовок — зона drag */
.header{
  display:flex; align-items:center; justify-content:space-between;
  margin-bottom:10px; font-weight:800; user-select:none;
}
.drag-handle{ cursor: move; }
.drag-handle *{ pointer-events: none; }  /* текст/иконки не глушат drag */
.more{ pointer-events:auto; border:none; background:transparent; color:var(--muted); }

/* контент */
.content{ display:block; }
.kpiRow{ display:grid; grid-template-columns: repeat(3,1fr); gap:12px; }
.kpi{
  background: color-mix(in srgb, var(--card-bg) 92%, var(--primary-start) 8%);
  border: 1px solid var(--card-brd);
  border-radius: var(--radius-md);
  padding: 12px;
  text-align: center;
}
.kpiVal{ font-size:22px; font-weight:800; }
.kpiLabel{ color: var(--muted); font-size:12px; }

/* === EDGE RESIZE ВНУТРИ .card (CSS Modules → :global) === */

/* 0) полностью отключаем дефолтную «стрелку» библиотеки */
.card :global(.react-resizable-handle)::after{
  content: none !important;    /* <- это убирает стрелочку */
}

/* базовое — никаких фоновых картинок/символов, поднимаем над контентом */
.card :global(.react-resizable-handle){
  background: none !important;
  background-image: none !important;
  font-size: 0;
  line-height: 0;
  z-index: 3;
}

/* правый край */
.card :global(.react-resizable-handle-e){
  position:absolute !important;
  top: 8px; bottom: 8px; right: 0;
  width: 18px;
  cursor: e-resize;
  opacity: 0; transition: opacity .15s ease;
  pointer-events: auto;
}
.card:hover :global(.react-resizable-handle-e){ opacity: .85; }
.card :global(.react-resizable-handle-e)::before{
  content:"";
  position:absolute; top:0; bottom:0; left:8px;
  width:2px; background: var(--card-brd); border-radius:2px;
}

/* нижний край */
.card :global(.react-resizable-handle-s){
  position:absolute !important;
  left: 8px; right: 8px; bottom: 0;
  height: 18px;
  cursor: s-resize;
  opacity: 0; transition: opacity .15s ease;
  pointer-events: auto; /* критично для «тянуть вниз» */
}
.card:hover :global(.react-resizable-handle-s){ opacity: .85; }
.card :global(.react-resizable-handle-s)::before{
  content:"";
  position:absolute; left:0; right:0; top:8px;
  height:2px; background: var(--card-brd); border-radius:2px;
}

/* угол (правый-нижний) */
.card :global(.react-resizable-handle-se){
  position:absolute !important;
  right: 2px; bottom: 2px; width: 18px; height: 18px;
  cursor: se-resize;
  opacity: 0; transition: opacity .15s ease;
  pointer-events: auto;
}
.card:hover :global(.react-resizable-handle-se){ opacity: .85; }
.card :global(.react-resizable-handle-se)::after{
  content:""; position:absolute; inset:3px;
  border-right:2px solid var(--card-brd);
  border-bottom:2px solid var(--card-brd);
  border-bottom-right-radius:3px;
}